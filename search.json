[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Harshitha Singannagari",
    "section": "",
    "text": "I am Harshitha Singannagari, a dedicated and passionate data enthusiast, currently pursuing my Master’s in Data Analytical Engineering at George Mason University. With a strong academic foundation in data science, statistics, operations research, and computer science, I am committed to leveraging my analytical and technical skills to solve complex, real-world challenges.\nThroughout my academic journey and professional internships, I have gained extensive experience in areas such as machine learning, predictive modeling, data visualization, and statistical analysis. My hands-on experience includes working on projects like building recommendation systems, forecasting models, and analyzing large datasets to extract actionable insights. Whether it’s optimizing building temperature for energy efficiency or predicting taxi trip durations through machine learning models, I thrive on tackling problems with precision and creativity.\nIn addition to my technical skills, I possess strong interpersonal and leadership abilities, allowing me to collaborate effectively in team environments and communicate complex data insights to diverse audiences. I’m passionate about continuous learning, staying up-to-date with industry trends, and applying the latest tools and technologies to drive data-driven decision-making.\nI am eager to bring my unique blend of skills and enthusiasm to new challenges, where I can contribute to impactful projects and deliver meaningful results."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Project Details 1",
    "section": "",
    "text": "Original data visualization:\nThe data used for the analysis and visualizations in this report have been sourced from the U.S. Bureau of Labor Statistics (BLS).\n\nThe initial scatter plot, which shows how gross job gains and losses are represented visually across the states in the United States. Each state is represented by a coloured square, and the x-axis shows job losses and the y-axis shows job gains. A thick legend at the top of the plot indicates which colours correspond to which states.\n\n\nProblems in the scatter plots:\n\nCluttered Legend:\nThe legend in the scatter plot has too many states, each represented by a different colour. The labels of some states are even reduced , making it challenging to determine which states the colours correspond to. The excessive range of colours produces a jumbled image that makes viewers constantly consult the legend. A good legend should have clear distinguish between the colour patterns used and positions, title of legend, ordering of the legends [1] .\nData Overlap: A large number of the data points, which indicate states with lower job gains and losses, are closely clustered in the graph’s lower left corner. This causes visual congestion, which makes it challenging to distinguish between different states. Viewers might find it difficult to derive significant conclusions from the scatter plot if states with comparable data are not clearly distinguished from one another.\nLack of Geographic Context: One of the main limitations of the scatter plot is that it does not provide a geographic representation of the states. Viewers are missing out on possible regional trends and patterns if they are unable to determine the locations of these states. For instance, it can be challenging to determine whether job growth and losses are concentrated in particular regions of the nation. Visualization use ranges from a single, private user to a large, public audience [2].\nInterpreting the Scale: Although the scatter plot has linear scales for job gains and losses, it lacks significant annotations or that would aid viewers in rapidly determining the extent of state-to-state variations. Lack of such context makes it more difficult to quickly understand the connections between job gains and losses [3].\nSimplified Colour Scheme: In contrast to the scatter plot, the color scheme in the Choropleth Map is more organized and controllable. States are categorized into color-coded groups according to job gain ranges rather than having individual colors. Because viewers can quickly scan the map and understand the relative job growth in each state without having to cross-reference a legend, this simplification facilitates easier interpretation [4].\n\nFirstly, it presents the data in a visually appealing manner that is relevant to geography, making it easy for viewers to spot regional patterns and trends in job growth. An immediate comprehension of the job gain magnitudes across states is provided by the addition of quantitative ranges adjacent to the colour scale, which further improves clarity. Last but not least, the choropleth map presents a more orderly visual hierarchy by emphasizing the states that are most crucial for job growth without having overlapping data points to distract the viewer.\n\n\nModified visualizations:\nFor redesigning the scatter plot data, The data for the plot is categorical which has data which contains name of country, job loss, job gains, state abbreviations. Firstly we did bar chart for the data set.\n\n\nBar chart:\n\n\n\n\n\n\nClear separation of job gains and losses: The bar chart provides two distinct bars which provides each state (job gains and job losses). This makes it easy to see the exact numbers for both metrics side by side.\nDirect value comparison: By looking at the heights of the bars, you can quickly see the exact difference between job gains and losses in each state. This is useful for those who prefer a clear breakdown between the two values for a direct comparison.\nState-by-state focus: The bar chart allows for detailed state-by-state analysis. For someone interested in looking at specific states and their individual job metrics, this chart offers an easier method to isolate a state’s performance.\n\nWhy this is better than other plot :\nThe bar chart makes it simple to quickly see the differences for individual states by giving a visual breakdown of the precise job gains and losses for each state.Bar charts are more recognizable and simpler to understand for certain audiences\n\n\nUSA Map plot:\nWe used map plot because in data set we have data of united states of america and statistics of job gains and losses per state. So it become easy to represent data in maps plot and helps in understanding the statistics.\n\n\n\nGeographic Context: The map provides a clear geographic representation, allowing viewers to easily identify regional trends and patterns in job gains.\n\n\n\nSimplified Colour Scheme: Instead of individual colours for each state, the map groups states into ranges, making interpretation easier and reducing visual clutter.\nQuantitative Clarity: The map includes job gain ranges, providing explicit data without guesswork and making it simple to identify which states are experiencing the most or least growth.\nBetter Visual Hierarchy: The map highlights states with the largest job gains more clearly, emphasizing economically active regions like Texas and California without the distraction of overlapping data points.\n\nWhy this is better than other plot:\nUSA Map is better because it uses a color-coded map to provide an obvious and simple-to-understand representation of job gains across U.S. states. This makes quickly observing regional trends easy. There is no need to cross-reference a complicated legend because the color scale is directly connected to the job gain numbers. Alternatively, a scatter plot makes it more difficult to quickly interpret job gains and losses because it has a lot of overlapping data points and an unreadable legend. Better geographic clarity and context can be found on the map found in USA Map."
  },
  {
    "objectID": "page.html",
    "href": "page.html",
    "title": "Project Details 2",
    "section": "",
    "text": "Original data visualization:\nThe data used for the analysis and visualizations in this report have been sourced from the U.S. Bureau of Labor Statistics (BLS).\n\nBubble Chart Representation: It displays a bubble chart with each bubble standing in for an industry and each bubble’s size indicating the employment level. The axes show the output (Y-axis) and the percent change in hours (X-axis).\n\n\nProblems in the Bubble plots:\n\nComplexity: With so many bubbles, the chart could be too much to handle. It is challenging to compare the performance of each industry with clarity due to the abundance of data points.\nData Overlap: Several bubbles are grouped together in the center, making it difficult to discern between industries that have comparable data points.\nDifficulties in Interpretation: It is challenging to rapidly interpret data because of the combination of axes, color coding, and bubble size. When compared to shifts in hours and output, people might find it difficult to comprehend the significance of the bubble sizes.\n\n\n\nModified visualizations:\nIn this data set, the data include employment levels, hours, output according to the industry. Where Output and hours data are in decimals but employment level data has large data. This makes data visualization over complicated. So we use\n\n\n\nBar chart:\n\n\n\nClarity and Simplicity: Two bars, one for hours worked and the other for output, represent each industry, making it much simpler to compare changes in hours worked and output directly within each industry. It stays clear of the confusion caused by overlapping points and bubble sizes.\nDirect Comparison: Without having to simultaneously interpret multiple variables (such as bubble size and position), you can quickly determine whether hours or output increased or decreased for each industry.\n\nWhy this is better than other plot :\nWe used bar chart for redesigning, As bubble chart is so clumsy, so we used bar chart for clear understanding between hours and output. In the dataset, employment data have higher number which makes the values of hours and outputs look smaller.\n\n\nline chart:\n\n\nHours (Blue Line): Shows how hours have changed over time.\nOutput (Orange Line): This shows how the output changed in proportion over the same amount of time.\nOverall Trend: It appears that both metrics are highly variable, with frequent peaks and troughs, suggesting that employment hours and productivity/output may fluctuate.\nBenefits of Line Chart\nClarity and Simplicity: Without overburdening the viewer with information, a line chart provides a clearer depiction of the relationship between hours and output over time.Ease of Interpretation: Compared to the crowded bubble chart, the simpler line chart enables a quicker, more intuitive understanding of the trends.Temporal Insights: Bubble charts lack this time-based insight, whereas line charts include it, which is essential for examining how trends change over time.\n\nIn summary, simple line chart is better suited for identifying trends in hours and output, while bubble chart is overcrowded and difficult to interpret effectively, especially when dealing with multiple industries and variables simultaneously."
  },
  {
    "objectID": "Code.html",
    "href": "Code.html",
    "title": "Code",
    "section": "",
    "text": "#libraries library(tidyverse) library(dplyr) library(readr) library(maps) library(mapproj) library(plotly)\n#theme hw &lt;- theme_gray()+ theme( plot.title=element_text(hjust=0.5), plot.subtitle=element_text(hjust=0.5), plot.caption=element_text(hjust=-.5),\nstrip.text.y = element_blank(), strip.background=element_rect(fill=rgb(.9,.95,1), colour=gray(.5), linewidth =.2),\npanel.border=element_rect(fill=FALSE,colour=gray(.70)), panel.grid.minor.y = element_blank(), panel.grid.minor.x = element_blank(), panel.spacing.x = unit(0.10,“cm”), panel.spacing.y = unit(0.05,“cm”),\n# axis.ticks.y= element_blank() axis.ticks=element_blank(), axis.text=element_text(colour=“black”), axis.text.y=element_text(margin=margin(0,3,0,3)), axis.text.x=element_text(margin=margin(-1,0,3,0)) )\n#load state abbrevations states &lt;- read.csv(“statess.csv”)\n#load data and cbind abbrevations job &lt;- read.csv(“dataset1.csv”) %&gt;% inner_join(states, by.x = states, by.y = state)\njoba &lt;- cbind(job, Abbreviation = states$Abbreviation)\nggplot(data = joba, aes(x=State, y=job_loss))+ geom_bar(stat=“identity”, color=“blue”, fill=“white”)\n#changing column names names(joba) names(joba) [2] &lt;- “job_loss” names(joba) [3] &lt;- “job_gains”\n#bar graph in plotly\nplot_ly( data = joba, x= ~State, y = ~job_loss, type = “bar”, name = “Job loss” ) %&gt;% add_trace(y=~job_gains, name = “job gain”)\n#map bar of job loss\nstates &lt;- map_data(“state”)\nview(states) rm(joba)\njoba\\(State &lt;- tolower(joba\\)State) joba\\(job_losses =  joba\\)job_loss / 100 usa_jobloss &lt;- usa_tbl %&gt;% left_join(joba, by = c(“region”= “State”))%&gt;%\nusa_jobloss\nusa_jobloss %&gt;% ggplot(aes(long, lat, group = group)) + geom_map( aes(map_id = region), map = usa_tbl, color = “gray80”, fill = “gray30”, size = 0.3)+ coord_map(“ortho”, orientation = c(39, -98, 0)) + geom_polygon(aes( fill = job_loss), color = “black”) + theme_minimal() + labs( title = “Job Loss in USA”,x = ““, y =”“, fill =”Job Loss per state”) + theme( plot.title = element_text(size = 26, face = “bold”, color = “blue”), legend.position = “left”)\nusa_jobloss %&gt;% ggplot(aes(long, lat, group = group)) + geom_map( aes(map_id = region), map = usa_tbl, color = “gray80”, fill = “gray30”, size = 0.3)+ coord_map(“ortho”, orientation = c(39, -98, 0)) + geom_polygon(aes( fill = job_gains), color = “black”) + theme_minimal() + labs( title = “Job Gain in USA”,x = ““, y =”“, fill =”Job gain per state”) + theme( plot.title = element_text(size = 26, face = “bold”, color = “blue”), legend.position = “left”)\n#dataset1 completed\ndatasett &lt;- read.csv(“dataset3.csv”)\nrm(dataset)\n#to remove null values\ndataset &lt;- na.omit(datasett)\nnames(dataset) names(dataset)[4] &lt;- “Employment_level”\n#bar chart with hours output in industry plot_ly( data = dataset, x= ~Industry, y = ~Hours, type = “bar”, name = “Hours” ) %&gt;% add_trace(y=~Output, name = “Output”)\nplot_ly( data = dataset, x= ~Industry, y = ~Employment_level, type = “bar”, name = “Employment level” )\nplot_ly( data = dataset, y= ~Hours, type = “scatter”, mode = ‘scatt’, name = “Hours” )%&gt;% add_trace(y=~Output, name = “Output”,mode =“lines+markers”)\nplot_ly( data = dataset, y= ~Employment_level, type = “scatter”, mode = ‘lines’, name = “Hours” )"
  }
]